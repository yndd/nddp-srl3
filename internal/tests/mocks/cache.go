// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/yndd/nddp-srl3/internal/cache (interfaces: Cache)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	gnmi "github.com/openconfig/gnmi/proto/gnmi"
	ygot "github.com/openconfig/ygot/ygot"
	cache "github.com/yndd/ndd-yang/pkg/cache"
	cache0 "github.com/yndd/nddp-srl3/internal/cache"
	model "github.com/yndd/nddp-srl3/internal/model"
	ygotnddp "github.com/yndd/nddp-system/pkg/ygotnddp"
)

// MockCache is a mock of Cache interface.
type MockCache struct {
	ctrl     *gomock.Controller
	recorder *MockCacheMockRecorder
}

// MockCacheMockRecorder is the mock recorder for MockCache.
type MockCacheMockRecorder struct {
	mock *MockCache
}

// NewMockCache creates a new mock instance.
func NewMockCache(ctrl *gomock.Controller) *MockCache {
	mock := &MockCache{ctrl: ctrl}
	mock.recorder = &MockCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCache) EXPECT() *MockCacheMockRecorder {
	return m.recorder
}

// DeleteSystemResource mocks base method.
func (m *MockCache) DeleteSystemResource(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSystemResource", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSystemResource indicates an expected call of DeleteSystemResource.
func (mr *MockCacheMockRecorder) DeleteSystemResource(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSystemResource", reflect.TypeOf((*MockCache)(nil).DeleteSystemResource), arg0, arg1)
}

// GetCache mocks base method.
func (m *MockCache) GetCache() *cache.Cache {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCache")
	ret0, _ := ret[0].(*cache.Cache)
	return ret0
}

// GetCache indicates an expected call of GetCache.
func (mr *MockCacheMockRecorder) GetCache() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCache", reflect.TypeOf((*MockCache)(nil).GetCache))
}

// GetModel mocks base method.
func (m *MockCache) GetModel(arg0 string) *model.Model {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetModel", arg0)
	ret0, _ := ret[0].(*model.Model)
	return ret0
}

// GetModel indicates an expected call of GetModel.
func (mr *MockCacheMockRecorder) GetModel(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetModel", reflect.TypeOf((*MockCache)(nil).GetModel), arg0)
}

// GetSystemExhausted mocks base method.
func (m *MockCache) GetSystemExhausted(arg0 string) (*uint32, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSystemExhausted", arg0)
	ret0, _ := ret[0].(*uint32)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSystemExhausted indicates an expected call of GetSystemExhausted.
func (mr *MockCacheMockRecorder) GetSystemExhausted(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSystemExhausted", reflect.TypeOf((*MockCache)(nil).GetSystemExhausted), arg0)
}

// GetSystemResource mocks base method.
func (m *MockCache) GetSystemResource(arg0, arg1 string) (*ygotnddp.NddpSystem_Gvk, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSystemResource", arg0, arg1)
	ret0, _ := ret[0].(*ygotnddp.NddpSystem_Gvk)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSystemResource indicates an expected call of GetSystemResource.
func (mr *MockCacheMockRecorder) GetSystemResource(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSystemResource", reflect.TypeOf((*MockCache)(nil).GetSystemResource), arg0, arg1)
}

// GetSystemResourceList mocks base method.
func (m *MockCache) GetSystemResourceList(arg0 string) (map[string]*ygotnddp.NddpSystem_Gvk, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSystemResourceList", arg0)
	ret0, _ := ret[0].(map[string]*ygotnddp.NddpSystem_Gvk)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSystemResourceList indicates an expected call of GetSystemResourceList.
func (mr *MockCacheMockRecorder) GetSystemResourceList(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSystemResourceList", reflect.TypeOf((*MockCache)(nil).GetSystemResourceList), arg0)
}

// GetValidatedGoStruct mocks base method.
func (m *MockCache) GetValidatedGoStruct(arg0 string) ygot.ValidatedGoStruct {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValidatedGoStruct", arg0)
	ret0, _ := ret[0].(ygot.ValidatedGoStruct)
	return ret0
}

// GetValidatedGoStruct indicates an expected call of GetValidatedGoStruct.
func (mr *MockCacheMockRecorder) GetValidatedGoStruct(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValidatedGoStruct", reflect.TypeOf((*MockCache)(nil).GetValidatedGoStruct), arg0)
}

// HasTarget mocks base method.
func (m *MockCache) HasTarget(arg0 string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HasTarget", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// HasTarget indicates an expected call of HasTarget.
func (mr *MockCacheMockRecorder) HasTarget(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HasTarget", reflect.TypeOf((*MockCache)(nil).HasTarget), arg0)
}

// Lock mocks base method.
func (m *MockCache) Lock() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Lock")
}

// Lock indicates an expected call of Lock.
func (mr *MockCacheMockRecorder) Lock() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Lock", reflect.TypeOf((*MockCache)(nil).Lock))
}

// SetModel mocks base method.
func (m *MockCache) SetModel(arg0 string, arg1 *model.Model) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetModel", arg0, arg1)
}

// SetModel indicates an expected call of SetModel.
func (mr *MockCacheMockRecorder) SetModel(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetModel", reflect.TypeOf((*MockCache)(nil).SetModel), arg0, arg1)
}

// SetSystemCacheStatus mocks base method.
func (m *MockCache) SetSystemCacheStatus(arg0 string, arg1 bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetSystemCacheStatus", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetSystemCacheStatus indicates an expected call of SetSystemCacheStatus.
func (mr *MockCacheMockRecorder) SetSystemCacheStatus(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSystemCacheStatus", reflect.TypeOf((*MockCache)(nil).SetSystemCacheStatus), arg0, arg1)
}

// SetSystemExhausted mocks base method.
func (m *MockCache) SetSystemExhausted(arg0 string, arg1 uint32) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetSystemExhausted", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetSystemExhausted indicates an expected call of SetSystemExhausted.
func (mr *MockCacheMockRecorder) SetSystemExhausted(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSystemExhausted", reflect.TypeOf((*MockCache)(nil).SetSystemExhausted), arg0, arg1)
}

// Unlock mocks base method.
func (m *MockCache) Unlock() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Unlock")
}

// Unlock indicates an expected call of Unlock.
func (mr *MockCacheMockRecorder) Unlock() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Unlock", reflect.TypeOf((*MockCache)(nil).Unlock))
}

// UpdateSystemResourceStatus mocks base method.
func (m *MockCache) UpdateSystemResourceStatus(arg0, arg1, arg2 string, arg3 ygotnddp.E_NddpSystem_ResourceStatus) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateSystemResourceStatus", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateSystemResourceStatus indicates an expected call of UpdateSystemResourceStatus.
func (mr *MockCacheMockRecorder) UpdateSystemResourceStatus(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateSystemResourceStatus", reflect.TypeOf((*MockCache)(nil).UpdateSystemResourceStatus), arg0, arg1, arg2, arg3)
}

// UpdateValidatedGoStruct mocks base method.
func (m *MockCache) UpdateValidatedGoStruct(arg0 string, arg1 ygot.ValidatedGoStruct, arg2 bool) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateValidatedGoStruct", arg0, arg1, arg2)
}

// UpdateValidatedGoStruct indicates an expected call of UpdateValidatedGoStruct.
func (mr *MockCacheMockRecorder) UpdateValidatedGoStruct(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateValidatedGoStruct", reflect.TypeOf((*MockCache)(nil).UpdateValidatedGoStruct), arg0, arg1, arg2)
}

// ValidateCreate mocks base method.
func (m *MockCache) ValidateCreate(arg0 string, arg1 interface{}) (ygot.ValidatedGoStruct, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateCreate", arg0, arg1)
	ret0, _ := ret[0].(ygot.ValidatedGoStruct)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateCreate indicates an expected call of ValidateCreate.
func (mr *MockCacheMockRecorder) ValidateCreate(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateCreate", reflect.TypeOf((*MockCache)(nil).ValidateCreate), arg0, arg1)
}

// ValidateDelete mocks base method.
func (m *MockCache) ValidateDelete(arg0 string, arg1 []*gnmi.Path, arg2 cache0.Origin) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateDelete", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateDelete indicates an expected call of ValidateDelete.
func (mr *MockCacheMockRecorder) ValidateDelete(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateDelete", reflect.TypeOf((*MockCache)(nil).ValidateDelete), arg0, arg1, arg2)
}

// ValidateUpdate mocks base method.
func (m *MockCache) ValidateUpdate(arg0 string, arg1 []*gnmi.Update, arg2, arg3 bool, arg4 cache0.Origin) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateUpdate", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateUpdate indicates an expected call of ValidateUpdate.
func (mr *MockCacheMockRecorder) ValidateUpdate(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateUpdate", reflect.TypeOf((*MockCache)(nil).ValidateUpdate), arg0, arg1, arg2, arg3, arg4)
}
